<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SPA是什么？</title>
      <link href="/2024/06/25/SPA%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
      <url>/2024/06/25/SPA%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p><code>SPA</code> 是单页应用（Single Page Application）的缩写。单页应用是一种 web 应用结构，其中所有的功能和内容都在一个 HTML 页面中加载和动态更新，而不是在用户导航时重新加载整个页面。SPA 的核心思想是通过 JavaScript 来动态更新页面内容，从而提供更快的用户体验和更流畅的交互。</p><span id="more"></span><h3 id="SPA-的特点"><a href="#SPA-的特点" class="headerlink" title="SPA 的特点"></a>SPA 的特点</h3><ol><li><strong>单个 HTML 页面</strong>：整个应用只有一个 HTML 页面，所有的内容和功能通过 JavaScript 动态加载和更新。</li><li><strong>客户端渲染</strong>：大部分渲染工作在客户端（浏览器）进行，服务器主要负责提供数据 API。</li><li><strong>更快的用户体验</strong>：由于不需要每次导航都重新加载整个页面，用户体验更加流畅。</li><li><strong>路由管理</strong>：通过 JavaScript 来管理应用的路由，通常使用库如 Vue Router 或 React Router。</li></ol><h3 id="SPA-的优势"><a href="#SPA-的优势" class="headerlink" title="SPA 的优势"></a>SPA 的优势</h3><ol><li><strong>更快的响应速度</strong>：因为不需要每次导航都重新加载整个页面，响应速度更快。</li><li><strong>流畅的用户体验</strong>：页面切换和数据更新更加流畅，用户体验更好。</li><li><strong>减少服务器负载</strong>：服务器主要提供数据 API，减少了对服务器的压力。</li><li><strong>更好的开发体验</strong>：现代前端框架和工具（如 Vue.js、React、Angular）提供了强大的开发工具和生态系统，提升了开发效率。</li></ol><h3 id="SPA-的挑战"><a href="#SPA-的挑战" class="headerlink" title="SPA 的挑战"></a>SPA 的挑战</h3><ol><li><strong>SEO 问题</strong>：由于内容是通过 JavaScript 动态加载的，搜索引擎爬虫可能无法抓取页面内容，影响 SEO。</li><li><strong>首屏加载时间</strong>：由于需要加载大量的 JavaScript 文件，可能导致首屏加载时间较长。</li><li><strong>复杂的客户端逻辑</strong>：需要在客户端处理更多的逻辑，增加了开发和维护的复杂性。</li></ol><h3 id="Vue-js-中的-SPA-结构"><a href="#Vue-js-中的-SPA-结构" class="headerlink" title="Vue.js 中的 SPA 结构"></a>Vue.js 中的 SPA 结构</h3><p>使用 Vue.js 创建 SPA 通常包括以下几个主要部分：</p><ol><li><p><strong>项目结构</strong>：典型的 Vue.js 项目结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">my-vue-app/</span><br><span class="line">├── public/</span><br><span class="line">│   └── index.html</span><br><span class="line">├── src/</span><br><span class="line">│   ├── assets/</span><br><span class="line">│   ├── components/</span><br><span class="line">│   ├── router/</span><br><span class="line">│   │   └── index.js</span><br><span class="line">│   ├── store/</span><br><span class="line">│   ├── views/</span><br><span class="line">│   ├── App.vue</span><br><span class="line">│   └── main.js</span><br><span class="line">├── package.json</span><br><span class="line">└── vue.config.js</span><br></pre></td></tr></table></figure></li><li><p><strong>路由管理</strong>：使用 Vue Router 来管理应用的路由。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/router/index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../views/Home.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&quot;../views/About.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>, <span class="attr">component</span>: <span class="title class_">Home</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">&quot;/about&quot;</span>, <span class="attr">component</span>: <span class="title class_">About</span> &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(process.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure></li><li><p><strong>状态管理</strong>：使用 Pinia 或 Vuex 来管理应用的全局状态。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/store/index.js (使用 Pinia)</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createPinia</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure></li><li><p><strong>入口文件</strong>：在 <code>main.js</code> 中挂载 Vue 实例并配置路由和状态管理。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>).<span class="title function_">use</span>(router).<span class="title function_">use</span>(store).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="SPA-的优化"><a href="#SPA-的优化" class="headerlink" title="SPA 的优化"></a>SPA 的优化</h3><ol><li><p>代码拆分：使用动态导入和 Webpack 的代码拆分功能，按需加载模块，减少首屏加载时间。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">About</span> = (<span class="params"></span>) =&gt; <span class="keyword">import</span>(<span class="string">&quot;../views/About.vue&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>懒加载组件：对于不需要立即加载的组件，使用懒加载。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineAsyncComponent &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">AsyncComponent</span> = <span class="title function_">defineAsyncComponent</span>(<span class="function">() =&gt;</span></span><br><span class="line">  <span class="keyword">import</span>(<span class="string">&quot;./components/AsyncComponent.vue&quot;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>服务端渲染 (SSR)：结合 SSR 技术（如使用 Nuxt.js），改善 SEO 和首屏加载时间。</p></li></ol><p>通过这些方法，可以构建一个高性能的 SPA 应用，同时克服其固有的一些挑战。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客语法速查</title>
      <link href="/2024/06/25/hexo%E5%8D%9A%E5%AE%A2%E8%AF%AD%E6%B3%95%E9%80%9F%E6%9F%A5/"/>
      <url>/2024/06/25/hexo%E5%8D%9A%E5%AE%A2%E8%AF%AD%E6%B3%95%E9%80%9F%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="文章变量"><a href="#文章变量" class="headerlink" title="文章变量"></a>文章变量</h2><p>文章变量可以定义在 md 文件的开头。可以定义文章的标题，时间，归档的标签，归档的分类，文章关键字，文章描述，文章出处以及文章的示例等。</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo博客语法速查</span><br><span class="line">date: 2024-06-25 12:49:59</span><br><span class="line">tags: [技术, 速查, 笔记, 语法]</span><br><span class="line">desc: 一篇展示hexo的md语法格式的文章，主要用来自己速查</span><br><span class="line">keywords: 速查，语法，hexo</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> blog</span><br><span class="line">from: https://hexo.io/zh-cn/</span><br><span class="line"><span class="section"># demo: ../../../demos/201703/background.html</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h2><p>如果你想创建文章摘要用于向读者展示文章的核心内容，那么需要在文章摘要之后其他内容之前添加 HTML 注释标签 <code>&lt;!--more--&gt;</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><h2 id="警告块"><a href="#警告块" class="headerlink" title="警告块"></a>警告块</h2><p>使用警告块需要 <code>div</code> 标签和 <code>tip</code> 类名：</p><div class="tip">  在ECMAScript5的strict模式下，这种情况的this已经被规定不会指向全局对象了，而是undefined</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tip&quot;</span>&gt;</span></span><br><span class="line">  在ECMAScript5的strict模式下，这种情况的this已经被规定不会指向全局对象了，而是undefined</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><ul><li><a href="https://www.coursera.org/learn/deep-learning">Coursera 上的深度学习课程</a></li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> [<span class="string">Coursera 上的深度学习课程</span>](<span class="link">https://www.coursera.org/learn/deep-learning</span>)</span><br></pre></td></tr></table></figure><span id="more"></span><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>从 md 的二级标题开始。</p><h2 id="评论插件"><a href="#评论插件" class="headerlink" title="评论插件"></a>评论插件</h2><p>Hexo-theme-bubuzou 评论插件由最开始的多说改成网易云跟帖，后面由于 8 月 1 号云跟帖暂停服务，所以现在又换成了畅言。请在 <code>theme/_config.yml</code> 文件中做如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">changyan:</span> <span class="string">bubuzou</span></span><br></pre></td></tr></table></figure><h2 id="归档页面显示所有文章"><a href="#归档页面显示所有文章" class="headerlink" title="归档页面显示所有文章"></a>归档页面显示所有文章</h2><p>需要安装<code>hexo-generator-archive</code>插件支持，然后在全局的<code>_config.yml</code>里配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">archive_generator:</span><br><span class="line">    per_page: 0</span><br><span class="line">    yearly: false</span><br><span class="line">    monthly: false</span><br><span class="line">    daily: false</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> 速查 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
